=== 2.0.0 2012-11-21 MINT 2012 Framework version

* new interator_helpers module that collects common used utility functions used inside from state charts added
  AIOUTContinuous feature to move to waiting if timeout occured (Sebastian Feuerstack)
* Changed to act as a server (Sebastian Feuerstack)
* code cleanups (Sebastian Feuerstack)
* new hightlighting caching (Sebastian Feuerstack)
* fixed net interactor get method (Sebastian Feuerstack)
* information for windows installation (Sebastian Feuerstack)
* new static get helper method to retrieve interactors from redis - changed nested
  resfreshing and changed browser mapping (Sebastian Feuerstack)
* added automatic reconnect feature (Sebastian Feuerstack)
* changed to static getModel to improve observation performance (Sebastian Feuerstack)
* interactors use channel that includes interactor name to reduce observation overhead (Sebastian Feuerstack)
* switched to multijson and oj to parse json, 15% performance gain for mapping test (Sebastian Feuerstack)
* new performance test for mappings (Sebastian Feuerstack)
* sync highlight inside CUIcontrol instead of mapping (Sebastian Feuerstack)
* added error message (Sebastian Feuerstack)
* position updater no longer change x and y values (Sebastian Feuerstack)
* added fingertip (Sebastian Feuerstack)
* support for backend_action calls without parameters (Sebastian Feuerstack)
* added disconnect feature (Sebastian Feuerstack)
* moved ticker inside next and previous (Sebastian Feuerstack)
* removed mappings that make sync problems (Sebastian Feuerstack)
* new aiinrange interactor (Sebastian Feuerstack)
* added basic server to Handpose interactor (Sebastian Feuerstack)
* added onehandnav mappings (Sebastian Feuerstack)
* fixed problem: interactors derived from aireference were not part of navigation (Sebastian Feuerstack)
* test with double check value before sync to reduce dirty sync problem (Sebastian Feuerstack)
* AICommand and AIChoiceElement are now AIReferences since they can contain a nested label (Sebastian Feuerstack)
* references are not part of a sequential navigation (Sebastian Feuerstack)
* splitted browser refresh mapping into two mappings. Otherwise mapping would fail if no hidden interactors
  could be found (Sebastian Feuerstack)
* fixed publish update method (Sebastian Feuerstack)
* fixed mapping to deactivate command on mouse release (Sebastian Feuerstack)
* new sync_states feature of interactor that uses retrieves current redis state to keep running interactor instances
  up to date with external state changes (Sebastian Feuerstack)
* new mapping to refresh CarouFredSel on browser refresh fixed aisinglepresence mapping observation paths
  and fixed bug in obervation that prevented to define observations without states (Sebastian Feuerstack)
* bugfix for crash if observation is defined with unknown interactor name (Sebastian Feuerstack)
* added head mappings (Sebastian Feuerstack)
* state is now optional for instant observations (Sebastian Feuerstack)
* added new refreshing state (Sebastian Feuerstack)
* suspend all function (Sebastian Feuerstack)
* no longer need to set a state filter in instant observation (Sebastian Feuerstack)
* further test to check for suspend forwarding for containers (Sebastian Feuerstack)
* changed to check for highlighted instead of displayed to reduce amount of unwanted matches (Sebastian Feuerstack)
* State is now optional for instant observations (Sebastian Feuerstack)
* fixed all remaining tests re-added label attribute to AIIN for backward compability (Sebastian Feuerstack)
* made adjustments to match latest specs fixed all tests (Sebastian Feuerstack)
* changes to match specs (Sebastian Feuerstack)
* changed to match specification (Sebastian Feuerstack)
* Merge remote-tracking branch 'origin/specification_cleanups' (Sebastian Feuerstack)
* update state names (Sebastian Feuerstack)
* code cleanups to match the specifications (Sebastian Feuerstack)
* prepared state machines for new spec version (Sebastian Feuerstack)
* added refresh capability and browser reload cleanups for handposture interactor (Sebastian Feuerstack)
* new browserscreen interactor to manage browser refresh
* inital handling of browser refresh by mapping and browserscreen interactor
* instant observations can retrieve more than one interactor if selection is done just by state name
* event_action can handle a list of interactors
* added test for list of interactors handling in event_action
* removed caroulfredselimage scxml as it is identical to cio added refreshing state for all cio
  interactors (Sebastian Feuerstack)
* changed nose movements threshold (Sebastian Feuerstack)
* backend calls supports more than one parameter
* new head interactor that includes tcpip server and conditions in SCXML instead in ruby code
* bind actions support transformation function (xml format as well) (Sebastian Feuerstack)
* removed syncronization calls that are now handled by mappings (Sebastian Feuerstack)
* fixed transitions (Sebastian Feuerstack)
* fixed channel naming (Sebastian Feuerstack)
* added inital_js state (Sebastian Feuerstack)
* changed to sequential (Sebastian Feuerstack)
* new mappings to support list selection (Sebastian Feuerstack)
* removed synchronization calls that we implement as mappings separately
* changed listed to unchosen to be more clear (Sebastian Feuerstack)
* fixed bug for instant check without set name (Sebastian Feuerstack)
* new position updater that updates cio cache when displaying new interactors in browser
* adapted multi- and single choice manage display of their children as well
* added sync mappings between radiobuttons and aisinglechoice (Sebastian Feuerstack)
* outsourced radio button and radio button group to separate files (Sebastian Feuerstack)
* changed devlaut settings new init_js method (Sebastian Feuerstack)
* fixed next/prev navigation usinga ctive_child repaired test spec (Sebastian Feuerstack)
* add check to ensure that at least one child is displaying (Sebastian Feuerstack)
* add publish of depends (Sebastian Feuerstack)
* new cache mappings (Sebastian Feuerstack)
* removed cuicontrol2 and added scxmlserver + client (Sebastian Feuerstack)
* more detailed information in callback (Sebastian Feuerstack)
* added function to retrieve all mappings (Sebastian Feuerstack)
* added action states to inform about general success of a set of actions (Sebastian Feuerstack)
* refactoring (Sebastian Feuerstack)
* new sxcml client and server for lucas (Sebastian Feuerstack)
* added caching and aisinglepresence mappings to default mapping set (Sebastian Feuerstack)
* new wait_for children approach (Sebastian Feuerstack)
* added resturn statements to inform mapping about action success (Sebastian Feuerstack)
* suspend others method used in singleprecence interactor (Sebastian Feuerstack)
* publish highlightable attribute to be used in  cache mapping (Sebastian Feuerstack)
* new caroufedsel scxml refactored caroufredsel to separate file (Sebastian Feuerstack)
* support for nested selector (Sebastian Feuerstack)
* improved readme (Sebastian Feuerstack)
* publish only selected attributes to prevent cycles (Sebastian Feuerstack)
* implemented filtering (Sebastian Feuerstack)
* moved id to absrtract action class (Sebastian Feuerstack)
* changed scxml on_enter calls to work with using mappings (Sebastian Feuerstack)
* new caroufedsel scxml
* refactored caroufredsel to separate file (Sebastian Feuerstack)
* enhanced xsd to add process and observation type with restrictions fixed mappings (Sebastian Feuerstack)
* fixed mapping server to have default host and port
* fixed mapping server to support an initial mapping_manager (Sebastian Feuerstack)
* enhanced installation doc (Sebastian Feuerstack)
* substituted puts with callbacks (reverse-merged from commit 19534aa2812a2257e1f6f705804cf5b64a03587e)
  (Sebastian Feuerstack)
* changed loading path to be relative from mapping manager path file (Sebastian Feuerstack)
* mapping manager default mappings (Sebastian Feuerstack)
* fixed mapping names (Sebastian Feuerstack)
* changed channel naming to use specifc channel for communication with browser added flag to ensure
  bind_action only subscribes once (Sebastian Feuerstack)
* added onchange flag (Sebastian Feuerstack)
* further default mappings (Sebastian Feuerstack)
* changed channel name (Sebastian Feuerstack)
* added new aicommand spec based on aio_spec added xml-based sync mappings to button_spec (Sebastian Feuerstack)
* added more sync mappings (Sebastian Feuerstack)
* improved mapping parser to consider sequential mappings and negation observations
* added first aio sync mappings in xml tested sync mapping xml with spec (Sebastian Feuerstack)
* started refactoring out specs to shared AIO spec (Sebastian Feuerstack)
* changed data retrival channel to not interfere with state change observation (Sebastian Feuerstack)
* introduced helper that can handle several interactors at the same time (Sebastian Feuerstack)
* changed to use onchange instead of continuous (Sebastian Feuerstack)
* introduced inheritance for sync mappings by adding pattern query for observation subscriptions
* fixed tests to support the restart using the process attributes (Sebastian Feuerstack)
* introduced clean restart following the process attribute (Sebastian Feuerstack)
* removed sync calls from scxml added mapping for button <> AICommand sync (Sebastian Feuerstack)
* fixed aireference test (Sebastian Feuerstack)
* changed bindaction to support new pubsub client api (Sebastian Feuerstack)
* changed mouse interactor to new pubsub client (Sebastian Feuerstack)
* applied fiber handling to AIINContinuous as well removed all sync calls from scxml fixed spec (Sebastian Feuerstack)
* fixed spec first use of fibers to sync async code execution removed sync calls from scxml (Sebastian Feuerstack)
* refactored connection helper fixed further specs to support new hiredis pubsub client (Sebastian Feuerstack)
* redisconnector needs to be restarted for each test for the subscription mechanism to work correctly
  (Sebastian Feuerstack)
* got sync mappings to work
* outsourced mapping sync test into separate file
* changed to used a continuous subscription for observations that just ignore changes if observation has been stopped.
* switched to new em-hiredis pubsub client (Sebastian Feuerstack)
* new test helper to consider specific name and call callback if mapping finished to do further checks
  (Sebastian Feuerstack)
* fixed bug with zombie subscription callbacks (Sebastian Feuerstack)
* fixed unneeded un-subscription (Sebastian Feuerstack)
* added fail case for observation to restart mapping
* removed logging print statements from mappings, callback can be used for logging
* added process flag to distinguish between onchange, continuous, and instant  observations (Sebastian Feuerstack)
* CIO display to AIO presenting sync mapping test (Sebastian Feuerstack)
* added negation observation
* added initial support to use selector in observation name using dot notation
* first test to proof sync mapping removed sync display->presented from cio interactor (Sebastian Feuerstack)
* Sequential Mapping with primary test (Sebastian Feuerstack)
* added test for non-continuous observation (Sebastian Feuerstack)
* added test to check restart of mapping with continuous observation (Sebastian Feuerstack)
* refactored mapping handling fixed notification (Sebastian Feuerstack)
* substituted puts with callbacks (jcolnago)
* renamed mappingsparser to mapping_parser and moved to MINT-core (Sebastian Feuerstack)
* added test for spontaneous transition from inital state (Sebastian Feuerstack)
* moved mapping manager to new folder
* added initial mapping tcpip server
* added initial mapping server test (Sebastian Feuerstack)
* bugfix for other mappings that did not wait for done
* added timeout to ensure that a waiting example fails after waiting more than 3 seconds (Sebastian Feuerstack)
* added mapping_manager class (jcolnago)
* new cui elements that are used in music sheet (Sebastian Feuerstack)
* support to specify dependencies to define display order (Sebastian Feuerstack)
* inital test for mapping manager (Sebastian Feuerstack)
* added id to actions, observation and complementary_mapping (jcolnago)
* fixed drag and drop handling between choices (Sebastian Feuerstack)
* fixed complementary mapping spec (Sebastian Feuerstack)
* added spec for AIINContinuous (Sebastian Feuerstack)
* added tests for other mapping actions. (jcolnago)
* fixed CIO_spec (jcolnago)
* added head interactor to lib (Sebastian Feuerstack)
* Added exemplary mapping test (Sebastian Feuerstack)
* fixed AIOUTContinuous (Sebastian Feuerstack)
* Added timer for rspec to fail if expected state change does not occur (Sebastian Feuerstack)
* button test (Sebastian Feuerstack)
* fixed interactors to get slider/volume exampĺe to work (Sebastian Feuerstack)
* updated music_spec to new type of test (jcolnago)
* added test to check if abstract states are correct after entering and leaving parallel states (jcolnago)
* new aimultichoice sxcml (Sebastian Feuerstack)
* new head IR (Sebastian Feuerstack)
* Statemachine updates (jcolnago)
* basic interactor scxml (Sebastian Feuerstack)
* changed consume variable (Sebastian Feuerstack)
* consider highlighable feature for caching (Sebastian Feuerstack)
* interactor publishes initialize state upon creation (Sebastian Feuerstack)
* added right mouse button (Sebastian Feuerstack)
* added support for generic observations that do not refer to a specific interactor instance using
  name property (Sebastian Feuerstack)
* introduced highlightable property added missing hide transition (Sebastian Feuerstack)
* added selector feature (Sebastian Feuerstack)
* removed ruby state machine (Sebastian Feuerstack)
* fixed failing test for navigation to parents (Sebastian Feuerstack)
* removed parallel state that should handle updates (Sebastian Feuerstack)
* fixed AISinglePresence + specs (Sebastian Feuerstack)
* extended spec (Sebastian Feuerstack)
* refactoring: initialize_statemachien function no longer needs to be overwritten
  instead just getSCXML function needs to be overwritten to set the corerct scxml name
* added interactor spec (Sebastian Feuerstack)
* fixed aireference, specs are working but still one test fails (Sebastian Feuerstack)
* changed dependencies hiredis, em-hiredis, dm-serializer requires updated
  dm-redis-adapter project!! (Sebastian Feuerstack)
* Merged and deleted aui_jessica files (jcolnago)
* added basic multichoice scxml added to_string methods for navigation fields for debugger
  got navigation tests back working (Sebastian Feuerstack)
* refactoring: renamed typo Continous->Continuous (Sebastian Feuerstack)
* refactoring renamed AIC to AIContainer (Sebastian Feuerstack)
* refactored interaction resources to new structure (Sebastian Feuerstack)
* reintroduced navigation options for CIO got CIO spec working without errors (Sebastian Feuerstack)
* moved all new MINT2 interactors to MINT aui folder fixed broken navigation for AIO and AIC
* All tests for AIO and AIC interactor are working (Sebastian Feuerstack)
* refactored: basic Element class is now named Interactor
* removed old mappings organized new mappings into several folders: action,observation and mapping (Sebastian Feuerstack)
* updated installation instructions (Sebastian Feuerstack)
* new aireference scxml new option to activate publish event testing in spec helper (Sebastian Feuerstack)
* continuous flag for observations mappings can be named fixed button activate bug (Sebastian Feuerstack)
* changes for AIReference (jcolnago)
* removed uncessary files and added aireference (jcolnago)
* Removed AIChoice dependencies (jcolnago)
* Removed AIChoice (jcolnago)
* added capability to publish updates on data attribute changes (Sebastian Feuerstack)
* added mouse interactor added button / aicommand interactor new event_action (Sebastian Feuerstack)
* added missing min/max states (Sebastian Feuerstack)
* added mouse IR and changed pointer to mouse added hoe to gemfile (Sebastian Feuerstack)
* using statemachine files that I can alter (jcolnago)
* got new jquery based slider and progressbar working with mapping (Sebastian Feuerstack)
* drag n drop working. (jcolnago)
* added aisinglechoice scxml (jcolnago)
* added pointer interactor
* new action class cuicontrol works with redis
* commented out all navigation features because of trouble with redis adapter (Sebastian Feuerstack)
* change specs to use redis adapter fixed problem that prevents finishing a test example (Sebastian Feuerstack)
* added basic AIReference class structure added basic AIReference spec (Sebastian Feuerstack)
* added new CIO model added property to inicate model type (Sebastian Feuerstack)
* added check upon initialization (Sebastian Feuerstack)
* script and other small fixes (jcolnago)
* fixed to get it working with MINT-nodejs (Sebastian Feuerstack)
* got test to for continous mapping between slider and volume level gauge working (Sebastian Feuerstack)
* abstracted redis connection to connector class as singleton first experiments to get a continous mapping running (Sebastian Feuerstack)
* removed images (jcolnago)
* added AIINContinous and got it working (Sebastian Feuerstack)
* AIoutcontinuous forwards data updates to webpage (Sebastian Feuerstack)
* switched to hires - all AIOUTContinous tests seem to work (Sebastian Feuerstack)
* switched AIOUTContinous to eventmchine
* added em-spec library for testing em based AIOUTContinous (Sebastian Feuerstack)
* first experiments with aio and AIC connections left/right navigation still is a problem (Sebastian Feuerstack)
* changed to MINT2
* changed to Gemfile
* introduced new associations that enables prev;next to work with AIO - parent of
  AIC still is not working (Sebastian Feuerstack)
* first publish/subscribe support that ends up the cui agent to do the layout calculation (therafter it crashes)
* added attribute publish limitation function inside interactors, because the to_json serializer
  has problems with CIO objects (Sebastian Feuerstack)
* first test to switch to redis (Sebastian Feuerstack)
* fixed bug in installation instructions (Sebastian Feuerstack)

=== 1.0.1 2011-11-09

* Included all dependencies stored in Gemfile into the Rakefile / gemspec

=== 1.0.0 2011-11-01

* Initial release
